name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git Semantic Version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          major_pattern: "major:"          
          minor_pattern: "feacture:"
          format: "${major}.${minor}.${patch}-prerelease${increment}"
        id: version
      
      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: | 
          echo "Iniciando Login"
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          echo "Fin del login"
          
      - name: Create Build Arquitecture
        env:
          BUILDER_NAME: "multiplatform"
        run: |
          docker buildx create --platform linux/arm64,linux/arm/v8 --name $BUILDER_NAME
          docker buildx use $BUILDER_NAME
          
      - name: Build Docker Image
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
        run: |
          docker buildx build -t $REPOSITORY_NAME:$NEW_VERSION .
          docker buildx build -t $REPOSITORY_NAME:latest .

      - name: Push Docker Image to Docker Hub
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
        run: |
          docker push $REPOSITORY_NAME:$NEW_VERSION
          docker push $REPOSITORY_NAME:$latest 
          
      
        
